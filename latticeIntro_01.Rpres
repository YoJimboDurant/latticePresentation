Introduction to Lattice
========================================================
author: James Durant
date: 03/28/2015

Why lattice?
========================================================

Lattice uses trellis graphics like *ggplot2* but interface is different
- uses functions with formula calls
- graphical parameters, legends, scales, functions performed on conditioned data are controlled through lists passed to the function
- default appearance can be set ahead of time, and changed
- returns object which can be manipulated, combined or otherwise changed as needed

Basic lattice example
========================================================
There are 2 packages generally used:
```{r}
library(lattice)
library(latticeExtra)
```

Slide With Plot
========================================================

```{r, fig.align='center'}
carPlot <- xyplot(dist ~ speed, data=cars)
class(carPlot)
plot(carPlot)
```

What Controls this Plot
========================================================
There is a function to show how the graphics will default display in lattice:

```{r, fig.align='center'}
show.settings()
```


Finding and Changing trellis.par
========================================================
```{r, fig.align='center'}
newTheme <- oldTheme <-trellis.par.get()
grep("plot[.]symbol", names(newTheme))
```
The 15th parameter controls the plot.symbol appearance
```{r, fig.align='center'}
names(newTheme$plot.symbol)
names(newTheme$plot.line)
```

Find all parameters that control color of polygon:

```{r}
lapply(newTheme[grep("polygon", names(newTheme))], function(lx) grep("col", names(lx)))
```

Finding and Changing trellis.par
========================================================
Change some default paramters:

```{r, fig.align='center'}
newTheme$plot.symbol$pch <- 20
newTheme$plot.symbol$col <- "#000000"
newTheme$plot.line$col <- "red"
trellis.par.set(newTheme)
show.settings()
```
trellis.par.set changes the default behavior of the lattice graphics.

Finding and Changing trellis.par example
========================================================
Now when we call xyplot, it will use black circles and a red line:
```{r, fig.align='center'}
plot(carPlot)
```

Finding and Changing trellis.par example
========================================================
But if I wanted to go back:
```{r, fig.align='center'}
update(carPlot, par.settings=oldTheme)
```
